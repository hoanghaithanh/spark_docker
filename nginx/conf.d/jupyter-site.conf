# IP database
# load_module modules/ngx_http_geoip_module.so;

#geoip2 /opt/GeoLite2-Country.mmdb {
#   $geoip2_data_country_iso_code country iso_code;
#    }

#map $geoip2_data_country_iso_code $allowed_country {
#       default no;
#        CA yes;
#    }

# Top-level HTTP config for WebSocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close

geo $lan-ip {
default no;
10.0.0.0/24 yes;
172.18.0.1 yes;
192.168.65.1 yes;
}


map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream docker-jupyter {
    server jupyter:8888;
}

# HTTP server to redirect all 80 traffic to SSL/HTTPS
server {
    listen 80;
    server_name haithanhhoang.info;

    if ($allowed_country = no) {
           return 444;
        }
    add_header X-debug-message "$geoip_country_code" always;

    # Redirect the request to HTTPS
    return 302 https://$host$request_uri;
}

# HTTPS server to handle JupyterHub
server {
    listen 443 ssl;
    #ssl on;

    server_name haithanhhoang.info;

    if ( $lan-ip = yes){
	set $allowed_country yes;
    }

    if ($allowed_country = no) {
	    #add_header X-debug-message "$allowed_country" always;
	    #add_header X-debug-message "$geoip_country_code" always;
            return 444;
        }

    ssl_certificate /etc/letsencrypt/live/haithanhhoang.info/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/haithanhhoang.info/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    #ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;
    add_header X-debug-message "$geoip_country_code" always;
    # Managing literal requests to the JupyterHub frontend
    #location /myserver {
    #    return 302 /myserver/;
    #}

    location / {  # OOPS!
	# proxy_pass http://luscious/$2$is_args$args;  # OOPS!

	#proxy_pass http://docker-jupyter;  # OOPS!;
	#rewrite /myserver(.*) $1 break;
        proxy_set_header X-Real-IP $remote_addr;
	#proxy_set_header Host $http_host;
	proxy_set_header Host $server_name;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;

        proxy_buffering off;
	proxy_pass http://docker-jupyter;
    }

    # Managing requests to verify letsencrypt host
    location ~ /.well-known {
        allow all;
    }
}
